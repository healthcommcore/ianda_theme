<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 * 
 * Example on how to alter theme settings form
 * 
 */
function ianda_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
}

/** 
 * Implements hook_preprocess_page_title()
 */
function ianda_preprocess_page_title(&$vars) {
  $vars['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
}

/** 
 * Implements hook_preprocess_block()
 */
function ianda_preprocess_block(&$vars) {
  $config = $vars['configuration'];
  if ($config['provider'] == 'views') {
    if ( preg_match("/homepage_tiles/", $config['id']) ) {
      $vars['configuration']['homepage_tile'] = true;
    }
  }
}

/** 
 * Implements hook_preprocess_container()
 */
function ianda_preprocess_container(&$vars) {
  $path = \Drupal::service('path.current')->getPath();
  if(is_search_page($path)) {
    $vars['attributes']['search_page'] = true;
  }
}

/** 
 * Implements hook_preprocess_form_element()
 */
function ianda_preprocess_form_element(&$vars) {
  $path = \Drupal::service('path.current')->getPath();
  if(is_search_page($path)) {
    $vars['attributes']['search_page'] = true;
  }
}

/** 
 * Implements hook_preprocess_input()
 */
function ianda_preprocess_input(&$vars) {
  $path = \Drupal::service('path.current')->getPath();
  if(is_search_page($path)) {
    $vars['attributes']['search_page'] = true;
  }
}

/** 
 * Implements hook_preprocess_search_result()
 */
function ianda_preprocess_search_result(&$vars) {
  $result = $vars['result'];
  $path = "";
  $vars['check_type'] = array(
    'is_group' => false,
    'is_service' => false
  );
  switch( strtolower($result['type']) ) {
    case "i and a group":
      $vars['check_type']['is_group'] = true;
      $path = "/groups/";
      $path .= make_friendly_url($result['title']);
      $vars['url_override'] = $path;
      break;
    case "service":
      $vars['check_type']['is_service'] = true;
      $path = "/services/";
      $service = '/#';
      $service .= make_friendly_url($result['title']);
      $category = get_category($result);
      $path .= $category . $service;
      $vars['url_override'] = $path;
      break;
    default:
      return false;
  }
  /*
     ['result']['title']
     ['result']['type']
     attributes
     url
     title
     directory
     info
     info_split
  */
}

function get_category($result) {
  $cat_name = "";
  $field_service_cat = $result['node']->field_service_category[0];
  $id = method_exists($field_service_cat, 'getString') ? $field_service_cat->getString() : false;
  $cat_name = $id ? get_category_name($id) : "";
  return $cat_name;
}

function get_category_name($id) {
  $term = \Drupal\taxonomy\Entity\Term::load($id);
  $name = $term->getName();
  return make_friendly_url($name);
}

function make_friendly_url($str) {
  $cleaned = remove_unwanted_chars($str);
  $friendly = implode('-', explode(' ', $cleaned));
  return $friendly;
}

function remove_unwanted_chars($str) {
  $lower = strtolower($str);
  $cleaned = trim($lower, ':&()');
  return $cleaned;
}
function is_search_page($path) {
  $path_arr = explode("/", $path);
  return $path_arr[1] == "search";
}
